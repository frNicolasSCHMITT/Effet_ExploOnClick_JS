// Maj + Alt + DownArrow avec une ligne s√©l√©ctionn√©e pour la dupliquer 
const containerSlot = document.querySelector(".slot");  // const li√©e √† la div parent du bouton HTML
const btnConfettis = document.querySelector(".btn-confettis"); //const li√©e au bouton HTML
const emojis = ["üç∞","üç£","üçë","üçì"]; //tableau conservant les ic√¥nes utilis√©es

btnConfettis.addEventListener("click", fiesta)  //surveillance du click pour lancement fonction fiesta()

function fiesta(){

    if(isTweening()) return; //si fonction true alors exit. emp√™che de lancer si une animation est d√©j√† en cours

    for(let i = 0; i < 50; i++){  //boucle pour incr√©menter la valeur de i jusqu'√† 50

        const confetti = document.createElement("div"); //fait apparaitre de nouvelles div lors de l'appel de la const

        confetti.innerText = emojis[Math.floor(Math.random() * emojis.length)];  //pour trouver un emoji au hasard dans le tableau emolis

        containerSlot.appendChild(confetti);  //fait apparaitre des div de la const confetti dans le container
    
    }

    animateConfettis();
}

function animateConfettis(){

    const TLCONF = gsap.timeline();  //appel du JS externe "greensock" link√© dans l'HTML

    TLCONF  // timeline = JS pour animations

    .to(".slot div",{  // √† qui s'adresse l'ordre (ici toutes les div dans la <div class=slot>)
        y: "random(-100,100)",  //se d√©place sur l'axe y de telle √† telle distance (vertical)
        x: "random(-100,100)",  //se d√©place sur l'axe x de telle √† telle distance (horizontal)
        z: "random(0,1000)",  //se d√©place sur l'axe z de telle √† telle distance (profondeur d√©finie dans le CSS √† 1000px o√π (1 = lointain et petit) et (1000 = proche et gros).)
        rotation: "random(-90,90)",  //demande une rotation al√©atoire sur un axe d√©fini
        duration: 1  //dur√©e de l'animation en secondes
    })
    .to(".slot div", {  //Rends les √©l√©ments invisibles (mais toujours pr√©sents!)
        autoAlpha: 0,  // r√®gle opacity et visibility √† la valeur marqu√©e (0=invisible)
        duration: 0.3,  //dur√©e de l'animation de fading
    },"-=0.2")  // le d√©lai pour que la commande s'ex√©cute

    .add(() => {  
        containerSlot.innerHTML = ""; // remplace le contenu de la const containerSlot par du vide, supprimant donc les div cr√©√©es pr√©c√©demment
    });
}

function isTweening(){  //fonction pour check si une animation est en cours
    return gsap.isTweening(".slot div");  //renvoie true si c'est en cours d'animation, false sinon
};